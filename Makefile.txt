# Makefile para el proyecto Minishell

# Compilador y flags
CXX = g++
CXXFLAGS = -Wall -Wextra -std=c++11 -Iinclude
LDFLAGS = 

# Directorios
SRCDIR = src
INCDIR = include
OBJDIR = obj
BINDIR = .

# Archivos fuente y objeto
SOURCES = $(wildcard $(SRCDIR)/*.cpp)
OBJECTS = $(SOURCES:$(SRCDIR)/%.cpp=$(OBJDIR)/%.o)

# Nombre del ejecutable
TARGET = $(BINDIR)/minishell

# Regla principal
all: $(TARGET)

# Crear el ejecutable
$(TARGET): $(OBJECTS) | $(BINDIR)
	$(CXX) $(OBJECTS) -o $@ $(LDFLAGS)
	@echo "Compilaci√≥n completada: $(TARGET)"

# Compilar archivos objeto
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp | $(OBJDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Crear directorios necesarios
$(OBJDIR):
	mkdir -p $(OBJDIR)

$(BINDIR):
	mkdir -p $(BINDIR)

# Limpiar archivos compilados
clean:
	rm -rf $(OBJDIR) $(TARGET)
	@echo "Archivos compilados eliminados"

# Recompilar todo
rebuild: clean all

# Ejecutar el programa
run: $(TARGET)
	./$(TARGET)

# Mostrar ayuda
help:
	@echo "Comandos disponibles:"
	@echo "  make all     - Compilar el proyecto"
	@echo "  make clean   - Limpiar archivos compilados"
	@echo "  make rebuild - Limpiar y recompilar"
	@echo "  make run     - Compilar y ejecutar"
	@echo "  make help    - Mostrar esta ayuda"

# Declarar reglas que no crean archivos
.PHONY: all clean rebuild run help